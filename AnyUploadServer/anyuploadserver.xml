<?xml version="1.0" encoding="UTF-8"?>
<project name="anyuploadserver" default="all">
  
  
  <property file="anyuploadserver.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.war"/>
    <include name="*.zip"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8_(1)" value="${jdk.home.1.8_(1)}/bin"/>
  <path id="jdk.classpath.1.8_(1)">
    <fileset dir="${jdk.home.1.8_(1)}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8_(1)}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8_(1)}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8_(1)"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.lib.classpath">
    <fileset dir="${basedir}/WebContent/WEB-INF/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <!-- Application Server Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module AnyUploadServer -->
  
  <dirname property="module.anyuploadserver.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.anyuploadserver" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.anyuploadserver" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.anyuploadserver" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.anyuploadserver" value="-encoding UTF-8 -source 10 -target 10 ${compiler.args}"/>
  
  <property name="anyuploadserver.output.dir" value="${module.anyuploadserver.basedir}/out/production/AnyUploadServer"/>
  <property name="anyuploadserver.testoutput.dir" value="${module.anyuploadserver.basedir}/out/test/AnyUploadServer"/>
  
  <path id="anyuploadserver.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="anyuploadserver.module.production.classpath">
    <path refid="${module.jdk.classpath.anyuploadserver}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="anyuploadserver.runtime.production.module.classpath">
    <pathelement location="${anyuploadserver.output.dir}"/>
  </path>
  
  <path id="anyuploadserver.module.classpath">
    <path refid="${module.jdk.classpath.anyuploadserver}"/>
    <pathelement location="${anyuploadserver.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="anyuploadserver.runtime.module.classpath">
    <pathelement location="${anyuploadserver.testoutput.dir}"/>
    <pathelement location="${anyuploadserver.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.anyuploadserver">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.anyuploadserver">
    <patternset refid="excluded.from.module.anyuploadserver"/>
  </patternset>
  
  <path id="anyuploadserver.module.sourcepath">
    <dirset dir="${module.anyuploadserver.basedir}">
      <include name="WebContent/WEB-INF/lib"/>
      <include name="src/main/java"/>
      <include name="WebContent"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.anyuploadserver" depends="compile.module.anyuploadserver.production,compile.module.anyuploadserver.tests" description="Compile module AnyUploadServer"/>
  
  <target name="compile.module.anyuploadserver.production" depends="register.custom.compilers" description="Compile module AnyUploadServer; production classes">
    <mkdir dir="${anyuploadserver.output.dir}"/>
    <javac2 destdir="${anyuploadserver.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.anyuploadserver}/javac">
      <compilerarg line="${compiler.args.anyuploadserver}"/>
      <bootclasspath refid="anyuploadserver.module.bootclasspath"/>
      <classpath refid="anyuploadserver.module.production.classpath"/>
      <src refid="anyuploadserver.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.anyuploadserver"/>
    </javac2>
    
    <copy todir="${anyuploadserver.output.dir}">
      <fileset dir="${module.anyuploadserver.basedir}/WebContent/WEB-INF/lib">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.anyuploadserver.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.anyuploadserver.basedir}/WebContent">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.anyuploadserver.tests" depends="register.custom.compilers,compile.module.anyuploadserver.production" description="compile module AnyUploadServer; test classes" unless="skip.tests"/>
  
  <target name="clean.module.anyuploadserver" description="cleanup module">
    <delete dir="${anyuploadserver.output.dir}"/>
    <delete dir="${anyuploadserver.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.anyuploadserver, clean.artifact.unnamed" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.anyuploadserver" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.unnamed" value="${basedir}/out"/>
    <mkdir dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="clean.artifact.unnamed" description="clean unnamed artifact output">
    <delete dir="${artifact.output.unnamed}"/>
  </target>
  
  <target name="artifact.unnamed" depends="init.artifacts, compile.module.anyuploadserver, compile.module.anyuploadserver" description="Build &#39;unnamed&#39; artifact">
    <mkdir dir="${artifact.output.unnamed}"/>
    <mkdir dir="${artifact.output.unnamed}/WEB-INF"/>
    <mkdir dir="${artifact.output.unnamed}/WEB-INF/classes"/>
    <copy todir="${artifact.output.unnamed}/WEB-INF/classes">
      <fileset dir="${anyuploadserver.output.dir}"/>
    </copy>
    <mkdir dir="${artifact.output.unnamed}/WEB-INF/lib"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/log-1.0.0.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/log-1.0.0.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/jjwt-0.9.1.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/jjwt-0.9.1.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/log4j-1.2.17.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/log4j-1.2.17.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/ezmorph-1.0.6.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/ezmorph-1.0.6.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/commons-io-2.5.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/commons-io-2.5.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/commons-lang-2.6.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/commons-lang-2.6.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/httpserver-1.0.0.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/httpserver-1.0.0.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/slf4j-api-1.7.22.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/slf4j-api-1.7.22.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/json-lib-2.4-jdk15.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/json-lib-2.4-jdk15.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/commons-logging-1.2.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/commons-logging-1.2.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/protobuf-java-3.1.0.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/protobuf-java-3.1.0.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/slf4j-log4j12-1.7.22.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/slf4j-log4j12-1.7.22.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/commons-beanutils-1.9.3.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/commons-beanutils-1.9.3.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/javax.servlet-api-3.1.0.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/javax.servlet-api-3.1.0.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/commons-fileupload-1.3.2.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/commons-fileupload-1.3.2.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/protobuf-java-format-1.4.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/protobuf-java-format-1.4.jar"/>
    <copy file="${basedir}/WebContent/WEB-INF/lib/commons-collections-3.2.2.jar" tofile="${artifact.output.unnamed}/WEB-INF/lib/commons-collections-3.2.2.jar"/>
    <copy todir="${artifact.output.unnamed}/WEB-INF">
      <fileset dir="${anyuploadserver.output.dir}"/>
    </copy>
    <copy todir="${artifact.output.unnamed}">
      <fileset dir="${basedir}/out/WEB-INF"/>
    </copy>
    <mkdir dir="${artifact.output.unnamed}/WEB-INF"/>
    <copy file="${basedir}/WebContent/WEB-INF/web.xml" tofile="${artifact.output.unnamed}/WEB-INF/web.xml"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.unnamed" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>